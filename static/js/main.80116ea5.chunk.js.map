{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","isWinnerSquare","onClick","value","Board","row","col","_this","this","position","calculateArrayPosition","winner","indexOf","squares","content","renderSquare","renderBorderSquare","React","Component","Game","_this2","Object","_home_travis_build_Zomzog_tic_tac_toe_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_travis_build_Zomzog_tic_tac_toe_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_travis_build_Zomzog_tic_tac_toe_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","stepNumber","xIsNext","slice","length","posInArray","calculateWinner","setState","concat","move","step","status","_this3","current","moves","map","desc","String","fromCharCode","key","jumpTo","handleClick","lines","i","_lines$i","_home_travis_build_Zomzog_tic_tac_toe_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.80116ea5.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button \n      className={\"square \" + (props.isWinnerSquare? 'winner' : '')}\n      onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nclass Board extends React.Component {\n  renderSquare(row, col) {\n    const position = calculateArrayPosition(row, col);\n    const isWinnerSquare = this.props.winner && (this.props.winner.indexOf(position) >= 0);\n    return ( \n      <Square \n        isWinnerSquare={isWinnerSquare}\n        value={this.props.squares[position]}\n        onClick={() => this.props.onClick(row, col)}\n      />\n    );\n  }\n  renderBorderSquare(content) {\n    return ( \n      <button\n      className=\"square\"  >\n        {content}\n      </button>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0, 0)}\n          {this.renderSquare(0, 1)}\n          {this.renderSquare(0, 2)}\n          {this.renderBorderSquare(\"0\")}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(1, 0)}\n          {this.renderSquare(1, 1)}\n          {this.renderSquare(1, 2)}\n          {this.renderBorderSquare(\"1\")}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(2, 0)}\n          {this.renderSquare(2, 1)}\n          {this.renderSquare(2, 2)}\n          {this.renderBorderSquare(\"2\")}\n        </div>\n        <div className=\"board-row\">\n          {this.renderBorderSquare(\"A\")}\n          {this.renderBorderSquare(\"B\")}\n          {this.renderBorderSquare(\"C\")}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        }\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(row, col) {    \n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    const posInArray = calculateArrayPosition(row, col)\n    if (calculateWinner(squares) || squares[posInArray]) {\n      return;\n    } \n    squares[posInArray] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n        squares: squares,\n        move: {\n          row : row,\n          col : col\n          }\n        }\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move + ' '  + String.fromCharCode(65 + step.move.col) + ',' + step.move.row:\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n    \n    let status;\n    if (winner) {\n      status = 'Winner: ' + current.squares[winner[0]];\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board \n            winner={winner}\n            squares={current.squares}\n            onClick={(row, col) => this.handleClick(row, col)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return lines[i];\n    }\n  }\n  return null;\n}\n\nfunction calculateArrayPosition(row, col) {\n  return col * 3 + row;\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n  "],"sourceRoot":""}